-- MySQL Script generated by MySQL Workbench
-- 03/17/16 10:28:01
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema 101microservice
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `101microservice` ;

-- -----------------------------------------------------
-- Schema 101microservice
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `101microservice` DEFAULT CHARACTER SET utf8 ;
USE `101microservice` ;

-- -----------------------------------------------------
-- Table `101microservice`.`company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `101microservice`.`company` ;

CREATE TABLE IF NOT EXISTS `101microservice`.`company` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `101microservice`.`department`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `101microservice`.`department` ;

CREATE TABLE IF NOT EXISTS `101microservice`.`department` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `company_id` BIGINT UNSIGNED NOT NULL,
  `manager_id` BIGINT UNSIGNED NULL,
  `parent_department_id` BIGINT UNSIGNED NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `101microservice`.`employee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `101microservice`.`employee` ;

CREATE TABLE IF NOT EXISTS `101microservice`.`employee` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `salary` BIGINT UNSIGNED NOT NULL DEFAULT 0,
  `company_id` BIGINT UNSIGNED NULL,
  `department_id` BIGINT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC, `company_id` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `101microservice`.`totavg_unit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `101microservice`.`totavg_unit` ;

CREATE TABLE IF NOT EXISTS `101microservice`.`totavg_unit` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `department_id` BIGINT UNSIGNED NOT NULL,
  `company_name` VARCHAR(255) NULL,
  `created` DATETIME NOT NULL,
  `total` BIGINT UNSIGNED NOT NULL DEFAULT 0,
  `avg` BIGINT UNSIGNED NOT NULL DEFAULT 0,
  `sub_total` BIGINT UNSIGNED NOT NULL DEFAULT 0,
  `sub_avg` BIGINT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `101microservice`.`cut`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `101microservice`.`cut` ;

CREATE TABLE IF NOT EXISTS `101microservice`.`cut` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `reason` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `101microservice`.`salary_hist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `101microservice`.`salary_hist` ;

CREATE TABLE IF NOT EXISTS `101microservice`.`salary_hist` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `employee_id` BIGINT UNSIGNED NOT NULL,
  `company_name` VARCHAR(255) NULL,
  `department_name` VARCHAR(255) NULL,
  `created` DATETIME NOT NULL,
  `amount` BIGINT UNSIGNED NULL DEFAULT 0,
  `cut_id` BIGINT UNSIGNED NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `101microservice`.`totavg_company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `101microservice`.`totavg_company` ;

CREATE TABLE IF NOT EXISTS `101microservice`.`totavg_company` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `company_id` BIGINT UNSIGNED NOT NULL,
  `created` DATETIME NOT NULL,
  `total` BIGINT UNSIGNED NOT NULL DEFAULT 0,
  `avg` BIGINT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `101microservice`.`cuts_pending`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `101microservice`.`cuts_pending` ;

CREATE TABLE IF NOT EXISTS `101microservice`.`cuts_pending` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `cut_id` BIGINT UNSIGNED NOT NULL,
  `employee_id` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- MySQL Workbench Synchronization
-- Generated: 2016-03-17 10:29
-- Model: New Model
-- Version: 1.0
-- Project: Name of the project
-- Author: nbreest

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL';

ALTER TABLE `101microservice`.`employee`
CHANGE COLUMN `id` `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT ,
CHANGE COLUMN `salary` `salary` BIGINT(20) UNSIGNED NOT NULL DEFAULT 0 ,
CHANGE COLUMN `company_id` `company_id` BIGINT(20) UNSIGNED NULL DEFAULT NULL ,
CHANGE COLUMN `department_id` `department_id` BIGINT(20) UNSIGNED NULL DEFAULT NULL ,
ADD INDEX `fk_employee_company_idx` (`company_id` ASC),
ADD INDEX `fk_employee_department_idx` (`department_id` ASC);

ALTER TABLE `101microservice`.`department`
CHANGE COLUMN `id` `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT ,
CHANGE COLUMN `company_id` `company_id` BIGINT(20) UNSIGNED NOT NULL ,
CHANGE COLUMN `manager_id` `manager_id` BIGINT(20) UNSIGNED NULL DEFAULT NULL ,
CHANGE COLUMN `parent_department_id` `parent_department_id` BIGINT(20) UNSIGNED NULL DEFAULT NULL ,
ADD INDEX `fk_department_company_idx` (`company_id` ASC),
ADD INDEX `fk_department_employee_idx` (`manager_id` ASC),
ADD INDEX `fk_department_department_idx` (`parent_department_id` ASC);

ALTER TABLE `101microservice`.`totavg_unit`
CHANGE COLUMN `id` `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT ,
CHANGE COLUMN `department_id` `department_id` BIGINT(20) UNSIGNED NOT NULL ,
CHANGE COLUMN `total` `total` BIGINT(20) UNSIGNED NOT NULL DEFAULT 0 ,
CHANGE COLUMN `avg` `avg` BIGINT(20) UNSIGNED NOT NULL DEFAULT 0 ,
CHANGE COLUMN `sub_total` `sub_total` BIGINT(20) UNSIGNED NOT NULL DEFAULT 0 ,
CHANGE COLUMN `sub_avg` `sub_avg` BIGINT(20) UNSIGNED NOT NULL DEFAULT 0 ,
ADD INDEX `fk_totavg_unit_department_idx` (`department_id` ASC);

ALTER TABLE `101microservice`.`salary_hist`
CHANGE COLUMN `id` `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT ,
CHANGE COLUMN `employee_id` `employee_id` BIGINT(20) UNSIGNED NOT NULL ,
CHANGE COLUMN `amount` `amount` BIGINT(20) UNSIGNED NULL DEFAULT 0 ,
CHANGE COLUMN `cut_id` `cut_id` BIGINT(20) UNSIGNED NULL DEFAULT NULL ,
ADD INDEX `fk_salary_hist_employee_idx` (`employee_id` ASC),
ADD INDEX `fk_salary_hist_cut_idx` (`cut_id` ASC);

ALTER TABLE `101microservice`.`cut`
CHANGE COLUMN `id` `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT ;

ALTER TABLE `101microservice`.`totavg_company`
CHANGE COLUMN `id` `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT ,
CHANGE COLUMN `company_id` `company_id` BIGINT(20) UNSIGNED NOT NULL ,
CHANGE COLUMN `total` `total` BIGINT(20) UNSIGNED NOT NULL DEFAULT 0 ,
CHANGE COLUMN `avg` `avg` BIGINT(20) UNSIGNED NOT NULL DEFAULT 0 ,
ADD INDEX `fk_totavg_company_company_idx` (`company_id` ASC);

ALTER TABLE `101microservice`.`cuts_pending`
CHANGE COLUMN `id` `id` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT ,
CHANGE COLUMN `cut_id` `cut_id` BIGINT(20) UNSIGNED NOT NULL ,
CHANGE COLUMN `employee_id` `employee_id` BIGINT(20) UNSIGNED NOT NULL ,
ADD INDEX `fk_cuts_pending_cut_idx` (`cut_id` ASC),
ADD INDEX `fk_cuts_pending_employee_idx` (`employee_id` ASC);

ALTER TABLE `101microservice`.`employee`
ADD CONSTRAINT `fk_employee_company`
  FOREIGN KEY (`company_id`)
  REFERENCES `101microservice`.`company` (`id`)
  ON DELETE SET NULL
  ON UPDATE RESTRICT,
ADD CONSTRAINT `fk_employee_department`
  FOREIGN KEY (`department_id`)
  REFERENCES `101microservice`.`department` (`id`)
  ON DELETE SET NULL
  ON UPDATE RESTRICT;

ALTER TABLE `101microservice`.`department`
ADD CONSTRAINT `fk_department_company`
  FOREIGN KEY (`company_id`)
  REFERENCES `101microservice`.`company` (`id`)
  ON DELETE CASCADE
  ON UPDATE RESTRICT,
ADD CONSTRAINT `fk_department_employeemanager`
  FOREIGN KEY (`manager_id`)
  REFERENCES `101microservice`.`employee` (`id`)
  ON DELETE SET NULL
  ON UPDATE RESTRICT,
ADD CONSTRAINT `fk_department_department`
  FOREIGN KEY (`parent_department_id`)
  REFERENCES `101microservice`.`department` (`id`)
  ON DELETE SET NULL
  ON UPDATE RESTRICT;

ALTER TABLE `101microservice`.`totavg_unit`
ADD CONSTRAINT `fk_totavg_unit_department`
  FOREIGN KEY (`department_id`)
  REFERENCES `101microservice`.`department` (`id`)
  ON DELETE CASCADE
  ON UPDATE RESTRICT;

ALTER TABLE `101microservice`.`salary_hist`
ADD CONSTRAINT `fk_salary_hist_employee`
  FOREIGN KEY (`employee_id`)
  REFERENCES `101microservice`.`employee` (`id`)
  ON DELETE CASCADE
  ON UPDATE RESTRICT,
ADD CONSTRAINT `fk_salary_hist_cut`
  FOREIGN KEY (`cut_id`)
  REFERENCES `101microservice`.`cut` (`id`)
  ON DELETE CASCADE
  ON UPDATE RESTRICT;

ALTER TABLE `101microservice`.`totavg_company`
ADD CONSTRAINT `fk_totavg_company_company`
  FOREIGN KEY (`company_id`)
  REFERENCES `101microservice`.`company` (`id`)
  ON DELETE CASCADE
  ON UPDATE RESTRICT;

ALTER TABLE `101microservice`.`cuts_pending`
ADD CONSTRAINT `fk_cuts_pending_cut`
  FOREIGN KEY (`cut_id`)
  REFERENCES `101microservice`.`cut` (`id`)
  ON DELETE CASCADE
  ON UPDATE RESTRICT,
ADD CONSTRAINT `fk_cuts_pending_employee`
  FOREIGN KEY (`employee_id`)
  REFERENCES `101microservice`.`employee` (`id`)
  ON DELETE RESTRICT
  ON UPDATE RESTRICT;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

